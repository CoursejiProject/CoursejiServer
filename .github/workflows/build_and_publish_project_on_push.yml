# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven And Push To Server On Push Master

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: show env message
        run: echo "::debug::dataBasePassword is ${{ secrets.ROOTPASSWORD }}"
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          # MYSQL_ROOT_PASSWORD - root superuser password
          mysql root password: ${{ secrets.ROOTPASSWORD }} # optional, default is
          # MYSQL_DATABASE - name for the default database that is created
          mysql database: courseji # optional, default is
      - name: Build with Maven
        run: mvn -B package --file courseji/pom.xml
      - name: SCP Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "./courseji/target/courseji-0.0.1-SNAPSHOT.jar"
          target: "/root/CoursejiServer"
          port: 22
#      - name: executing remote ssh commands using password
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SERVER_HOST }}
#          username: ${{ secrets.SERVER_USERNAME }}
#          password: ${{ secrets.SERVER_PASSWORD }}
#          script: |
#            ps -ef|grep "courseji-0.0.1-SNAPSHOT.jar" |grep -v grep|cut -c 9-15|xargs kill -9
#            nohup java -jar /root/CoursejiServer/courseji/target/courseji-0.0.1-SNAPSHOT.jar > /root/CoursejiServer/courseji.txt &
    
